@model TierraCreative.Model.User

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Administrator.cshtml";
}

<div class="col-lg-12 form">
    <h4>
        <p><small>Welcome <strong>(@Html.Raw(Session["UserName"]))</strong></small></p>
    </h4>
    <h2>Create User</h2>
    <hr />
</div>

<div class="col-lg-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.IsEnabled)
        @Html.HiddenFor(model => model.CreatedById)
        @Html.HiddenFor(model => model.CreatedDate)
        @Html.HiddenFor(model => model.UpdatedById)
        @Html.HiddenFor(model => model.UpdatedDate)

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @if (ViewBag.ErrorMessage != null)
            {
                @*<h3 style="color:red;"> @Html.Raw(ViewBag.ErrorMessage) </h3>
                    <a class="btn default" href="supplementarydividends/add">Return to review</a>*@

                <p style="color:red;">@Html.Raw(ViewBag.ErrorMessage)!</p>
                @*<input id="button1" type="button" value="Return to review" class="btn default" onclick="window.location = '/ra/review'" />*@
            }

            <div class="form-group row">
                @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                <div class="col-lg-4 col-sm-6">
                    @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                <div class="col-lg-4 col-sm-6">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                <div class="col-lg-4 col-sm-6">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                <div class="col-lg-4 col-sm-6">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                <div class="col-lg-4 col-sm-6">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                <div class="col-lg-4 col-sm-6">
                    @Html.Password("txtconfirmpassword", "", new { @class = "form-control" })

                </div>
            </div>

            @*<div class="form-group row">
                    @Html.LabelFor(model => model.IsEnabled, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                    <div class="col-lg-4 col-sm-6">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsEnabled)
                            @Html.ValidationMessageFor(model => model.IsEnabled, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.CreatedById, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                    <div class="col-lg-4 col-sm-6">
                        @Html.EditorFor(model => model.CreatedById, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedById, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                    <div class="col-lg-4 col-sm-6">
                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.UpdatedById, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                    <div class="col-lg-4 col-sm-6">
                        @Html.EditorFor(model => model.UpdatedById, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedById, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-lg-3 col-sm-6" })
                    <div class="col-lg-4 col-sm-6">
                        @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group row">
                <label class="control-label col-lg-3 col-sm-6"></label>
                <div class="col-lg-4 col-sm-6">
                    <input type="submit" value="Submit" class="btn default" />
                    <p style="margin-top:1rem;"><strong>Or</strong></p>
                    <a href="../admin/main"><button class="btn default">Cancel and Return</button></a>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
